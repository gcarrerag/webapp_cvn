"use client";

import { useEffect, useState } from "react";
import Navbar from "../../components/Navbar";

export default function Admin() {
  const [comandes, setComandes] = useState([]);
  const [productes, setProductes] = useState([]);
  const [formulari, setFormulari] = useState({
    nom: "",
    descripcio: "",
    preu: "",
    imatge: "",
    stock: "",
  });

  useEffect(() => {
    const sessio = localStorage.getItem("adminLogat");
    if (sessio !== "true") {
      window.location.href = "/login";
    } else {
      carregarComandes();
      carregarProductes();
    }
  }, []);

  const handleChange = (e) => {
    setFormulari({ ...formulari, [e.target.name]: e.target.value });
  };

  const afegirProducte = async (e) => {
    e.preventDefault();
    await fetch("/api/productes", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(formulari),
    });
    setFormulari({ nom: "", descripcio: "", preu: "", imatge: "", stock: "" });
    carregarProductes();
  };

  const editarProducte = async (id) => {
    const nouPreu = prompt("Nou preu (€):");
    const nouStock = prompt("Nou stock:");
    if (nouPreu && nouStock) {
      await fetch(`/api/productes/${id}`, {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ preu: nouPreu, stock: nouStock }),
      });
      carregarProductes();
    }
  };

  const eliminarProducte = async (id) => {
    if (confirm("Segur que vols eliminar aquest producte?")) {
      await fetch(`/api/productes/${id}`, { method: "DELETE" });
      carregarProductes();
    }
  };

  const carregarComandes = async () => {
    const resposta = await fetch("/api/comanda");
    const dades = await resposta.json();
    setComandes(dades);
  };

  const carregarProductes = async () => {
    const resposta = await fetch("/api/productes");
    const dades = await resposta.json();
    setProductes(dades);
  };

  const marcarComEnviada = async (id) => {
    await fetch(`/api/comanda/${id}`, {
      method: "PUT",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ estat: "enviada" }),
    });
    carregarComandes();
  };

  const tancarSessio = () => {
    localStorage.removeItem("adminLogat");
    window.location.href = "/login";
  };

  return (
    <div>
      <Navbar />
      <main className="p-8 bg-gray-50 min-h-screen max-w-6xl mx-auto">
        <div className="flex justify-between items-center mb-6">
          <h1 className="text-2xl font-bold">👩‍⚕️ Panell d'administració</h1>
          <button onClick={tancarSessio} className="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600">
            Tancar sessió
          </button>
        </div>

        {/* 🛒 Formulari per afegir producte */}
        <form onSubmit={afegirProducte} className="grid grid-cols-1 sm:grid-cols-2 gap-4 mb-10 bg-white p-6 rounded shadow">
          <input name="nom" placeholder="Nom" value={formulari.nom} onChange={handleChange} required className="border px-4 py-2 rounded" />
          <input name="descripcio" placeholder="Descripció" value={formulari.descripcio} onChange={handleChange} required className="border px-4 py-2 rounded" />
          <input name="preu" placeholder="Preu (€)" value={formulari.preu} onChange={handleChange} type="number" required className="border px-4 py-2 rounded" />
          <input name="imatge" placeholder="Nom imatge (ex: producte1.jpg)" value={formulari.imatge} onChange={handleChange} required className="border px-4 py-2 rounded" />
          <input name="stock" placeholder="Estoc" value={formulari.stock} onChange={handleChange} type="number" required className="border px-4 py-2 rounded" />
          <button type="submit" className="bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700 transition col-span-full">Afegir producte</button>
        </form>

        {/* 📦 Llistat de productes */}
        <h2 className="text-xl font-bold mb-4">📦 Productes actuals</h2>
        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6 mb-12">
          {productes.map((prod) => (
            <div key={prod.id} className="bg-white p-4 rounded shadow text-center">
              <img src={`/${prod.imatge}`} alt={prod.nom} className="w-full h-40 object-cover rounded mb-2" />
              <h3 className="font-semibold text-blue-800">{prod.nom}</h3>
              <p className="text-sm text-gray-600">{prod.descripcio}</p>
              <p className="font-bold text-green-700 mt-2">{prod.preu} €</p>
              <p className={`text-sm mt-1 ${prod.stock > 0 ? "text-gray-700" : "text-red-500 font-semibold"}`}>
                {prod.stock > 0 ? `Stock: ${prod.stock}` : "Sense stock"}
              </p>
              <div className="flex justify-center gap-2 mt-4">
                <button onClick={() => editarProducte(prod.id)} className="bg-yellow-400 hover:bg-yellow-500 text-white px-3 py-1 rounded">
                  Editar
                </button>
                <button onClick={() => eliminarProducte(prod.id)} className="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded">
                  Eliminar
                </button>
              </div>
            </div>
          ))}
        </div>

        {/* 🧾 Llistat de comandes */}
        <h2 className="text-xl font-bold mb-4">📋 Comandes</h2>
        {comandes.length === 0 ? (
          <p className="text-gray-600">No hi ha comandes registrades.</p>
        ) : (
          <div className="space-y-6">
            {comandes.map((comanda) => (
              <div key={comanda.id} className="bg-white p-6 rounded shadow">
                <h2 className="text-lg font-semibold mb-2">🆔 Comanda #{comanda.id}</h2>
                <p><strong>Nom:</strong> {comanda.nom}</p>
                <p><strong>Telèfon:</strong> {comanda.telefon}</p>
                <p><strong>Adreça:</strong> {comanda.adreca}</p>
                <p><strong>Enviament:</strong> {comanda.enviament === "domicili" ? "A domicili" : "Recollida al local"}</p>
                <p><strong>Observacions:</strong> {comanda.observacions || "Cap"}</p>
                <p><strong>Data:</strong> {new Date(comanda.data).toLocaleString()}</p>
                <p><strong>Estat:</strong> {comanda.estat === "enviada" ? "📦 Enviada" : "⏳ Pendent"}</p>

                {comanda.estat !== "enviada" && (
                  <button
                    onClick={() => marcarComEnviada(comanda.id)}
                    className="mt-3 bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 transition"
                  >
                    Marcar com enviada
                  </button>
                )}

                <div className="mt-4">
                  <h3 className="font-semibold mb-1">🛍️ Productes:</h3>
                  <ul className="list-disc list-inside text-sm text-gray-700">
                    {JSON.parse(comanda.productes).map((prod, i) => (
                      <li key={i}>{prod.nom} – {prod.preu}</li>
                    ))}
                  </ul>
                </div>
              </div>
            ))}
          </div>
        )}
      </main>
    </div>
  );
}
